version: '3.8'

services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-init:
    image: apache/kafka:latest
    container_name: kafka-init
    depends_on:
      - kafka
    volumes:
      - ./init-topics.sh:/init-topics.sh
    entrypoint: ["/bin/bash", "/init-topics.sh"]
    restart: "no"

  etl-producer:
    build: ./producer
    container_name: etl-producer
    depends_on:
      - kafka-init  # 確保 Kafka 與 Topic 初始化完成後再啟動
    restart: always

  etl-consumer:
    build: ./consumer
    container_name: etl-consumer
    depends_on:
      - kafka-init
    restart: always

  etl-stream-process:
    build: ./stream_process
    container_name: etl-stream-process
    depends_on:
      - kafka-init
    restart: always

volumes:
  kafka_data: